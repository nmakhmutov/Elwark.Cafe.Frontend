@using Elwark.Education.Web.Gateways.User
@using Elwark.Education.Web.Gateways.Models.User
@inherits LayoutComponentBase
@layout MainLayout
@inject IUserClient UserClient
@inject IStringLocalizer<App> L

<div class="header">
    <div class="image">
    </div>
    <div class="content">
        <div class="avatar-container">
            <AuthorizeView>
                <Authorized>
                    <MudAvatar Size="Size.Large" Class="mr-6" Image="@(context.User.GetImage())"/>
                    <MudText Typo="Typo.h5" GutterBottom="true" Class="mb-0">
                        @context.User.GetName()
                    </MudText>
                </Authorized>
            </AuthorizeView>
        </div>
        @if (_profile.Status == ResponseStatus.Loading)
        {
            for (var i = 0; i < 3; i++)
            {
                <div class="content-item">
                    <MudSkeleton SkeletonType="SkeletonType.Circle" Animation="Animation.Wave" Width="20px" Height="20px"/>
                    <MudSkeleton SkeletonType="SkeletonType.Text" Animation="Animation.Wave" Width="60px" Height="12px" Class="mt-2"/>
                </div>
            }
        }
        else if (_profile.Status == ResponseStatus.Success)
        {
            <div class="content-item">
                <MudText Typo="Typo.h6">
                    @_profile.Data.Statistics.Summary.CompletedTests.Total.ToReadable()
                </MudText>
                <MudText Typo="Typo.body2">
                    @L["CompletedTests"]
                </MudText>
            </div>
            <div class="content-item">
                <MudText Typo="Typo.h6">
                    @_profile.Data.Statistics.Summary.Score.Total.ToReadable()
                </MudText>
                <MudText Typo="Typo.body2">
                    @L["Score"]
                </MudText>
            </div>
            <div class="content-item">
                <MudText Typo="Typo.h6">
                    @_profile.Data.Statistics.Summary.TimeSpent.ToSimpleFormat()
                </MudText>
                <MudText Typo="Typo.body2">
                    @L["TimeSpent"]
                </MudText>
            </div>
            <div class="content-item">
                <MudText Typo="Typo.h6">
                    @_profile.Data.Statistics.Summary.AnswerRatio.Questions.ToReadable()
                </MudText>
                <MudText Typo="Typo.body2">
                    @L["Questions"]
                </MudText>
            </div>
        }
    </div>
</div>

<MudContainer MaxWidth="MaxWidth.ExtraLarge" Style="min-height: 100%">
    <CascadingValue Value="_profile">
        @Body
    </CascadingValue>
</MudContainer>

@code {
    ApiResponse<Profile> _profile = ApiResponse<Profile>.Loading();

    protected override async Task OnInitializedAsync()
    {
        _profile = await UserClient.GetProfileAsync();
    }

}