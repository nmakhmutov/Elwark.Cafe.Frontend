@using Blazored.LocalStorage
@using Elwark.Education.Web.Infrastructure.LocalStorage
@inject ILocalStorage LocalStorage
@inject NavigationManager NavigationManager

<MudMenu StartIcon="@Filled.Translate" EndIcon="@Filled.KeyboardArrowDown" Color="Color.Inherit" Label="@Get()">
    @foreach (var (culture, name) in _cultures)
    {
        <MudMenuItem OnClick="@(() => Set(culture))">
            @name
        </MudMenuItem>        
    }
</MudMenu>

@code {

    private IReadOnlyDictionary<string, string> _cultures = new Dictionary<string, string>
    {
        ["en"] = "English",
        ["ru"] = "Русский"
    };

    private string Get() =>
        _cultures.TryGetValue(CultureInfo.CurrentCulture.TwoLetterISOLanguageName, out var language)
            ? language
            : _cultures.First().Value;

    private async Task Set(string language)
    {
        await LocalStorage.SetLanguageAsync(language);
        NavigationManager.NavigateTo(NavigationManager.Uri, true);
    }

}