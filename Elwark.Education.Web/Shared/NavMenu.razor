@using Elwark.Education.Web.Gateways.Models.History
@inject NavigationManager Navigation
@inject SignOutSessionStateManager SignOutManager
@inject IStringLocalizer<App> L

<MudNavMenu Class="navmenu">
    <AuthorizeView>

        <NotAuthorized>
            <div class="appbar-band">
                <div class="d-flex flex-row justify-center my-7">
                    <MudButton Color="Color.Primary" Variant="Variant.Filled" OnClick="@OnLogin">
                        @L["SignIn"]
                    </MudButton>
                </div>
            </div>
        </NotAuthorized>

        <Authorizing>
            <div class="appbar-band">
                <div class="my-1">
                    <MudSkeleton SkeletonType="SkeletonType.Circle" Width="56px" Height="56px"/>
                    <MudSkeleton SkeletonType="SkeletonType.Text" Class="mt-1"/>
                </div>
            </div>
        </Authorizing>

        <Authorized>
            <div class="appbar-band">
                <MudAvatar Image="@(context.User.GetImage())" Size="Size.Large"/>
                <MudText Typo="Typo.subtitle1" Class="mt-1">
                    @context.User.GetName()
                </MudText>
            </div>

            <MudNavLink Icon="@Filled.DonutLarge" Href="@Links.Profile.Index">
                @L["Profile"]
            </MudNavLink>
        </Authorized>

    </AuthorizeView>

    <MudDivider DividerType="DividerType.Middle" Class="my-3"/>

    <MudNavGroup
        Title="@L["Subject:History"]"
        Expanded="@(_subjectType == SubjectType.History)"
        Icon="@SubjectType.History.GetIcon()"
        ExpandIcon="@Filled.ExpandMore">
        @foreach (var (link, title) in _historyPages)
        {
            <MudNavLink Href="@link">
                @title
            </MudNavLink>
        }
    </MudNavGroup>

    <AuthorizeView>
        <Authorized>
            <MudAppBarSpacer/>
            <MudButton Variant="Variant.Text" StartIcon="@(Filled.Login)" OnClick="@BeginSignOut">
                @L["LogOut"]
            </MudButton>
        </Authorized>
    </AuthorizeView>
</MudNavMenu>

@code {
    private SubjectType _subjectType;
    private Dictionary<string, string> _historyPages = new();

    protected override void OnInitialized()
    {
        var path = $"/{Navigation.ToBaseRelativePath(Navigation.Uri)}";
        if (path.StartsWith(Links.History.Index))
            _subjectType = SubjectType.History;

        _historyPages = Enum.GetValues<HistoryPeriodType>()
            .ToDictionary(Links.History.Period, x => L[$"History:{x}"].Value);
    }

    private async Task BeginSignOut(MouseEventArgs args)
    {
        await SignOutManager.SetSignOutState();
        Navigation.NavigateTo("authentication/logout");
    }

    private void OnLogin()
    {
        Navigation.NavigateTo($"authentication/login?returnUrl={Uri.EscapeDataString(Navigation.Uri)}");
    }

}