@page "/history/test/{id}/conclusion"
@using Elwark.Education.Web.Gateways.History
@using Elwark.Education.Web.Gateways.History.Test
@using Elwark.Education.Web.Gateways.Models.Test

@attribute [Authorize]

<MainContainer>
    <ApiResponseViewer Response="@_response">
        <Placeholder>
            <section class="section">
                <div class="container">
                    <MudPaper Class="pa-3">
                        <MudSkeleton Width="30%"/>
                        <MudSkeleton Width="100%"/>
                    </MudPaper>
                </div>
            </section>
            <section class="section">
                <div class="container">
                    <DefaultFitGrid>
                        <SkeletonCard/>
                        <SkeletonCard/>
                        <SkeletonCard/>
                    </DefaultFitGrid>
                </div>
            </section>
            <section class="section">
                <div class="container">
                    <SkeletonCard/>
                </div>
            </section>
        </Placeholder>
        <Result Context="conclusion">
            @switch (conclusion)
            {
                case EasyTestConclusion test:
                    <Title Value="@test.Topic.Title"></Title>

                    <section class="section">
                        <div class="container mud-paper mud-elevation-1">
                            <div class="d-flex flex-wrap justify-space-between">
                                <div class="pa-3">
                                    <MudLink Href="@Links.Subject.History.Topic(test.Topic.Id)" Typo="Typo.h5">
                                        @test.Topic.Title
                                    </MudLink>
                                    <MudText Typo="Typo.body1">
                                        @L["Test:Easy"]
                                    </MudText>
                                </div>
                                <div class="pa-3">
                                    <ConclusionStatusTitle Status="@test.Status"/>
                                    <MudText Typo="Typo.body1" Align="Align.Right">
                                        @test.CompletedAt.ToSimpleFormat()
                                    </MudText>
                                </div>
                            </div>
                        </div>
                    </section>

                    <section class="section">
                        <div class="container">
                            <div class="mb-3">
                                <MudLink Href="@Links.Profile.History.EasyTestStatistics" Typo="Typo.h5">
                                    @L["Statistics"]
                                </MudLink>
                            </div>
                            <ConclusionCharts Conclusion="@test"/>
                        </div>
                    </section>

                    <section class="section">
                        <div class="container">
                            <MudText Typo="Typo.h5" Class="mb-3">
                                @L["Answers"]
                            </MudText>
                            <EasyQuestionTable Questions="@test.Questions"/>
                        </div>
                    </section>
                    break;

                case HardTestConclusion test:
                    <Title Value="@test.Topic.Title"></Title>

                    <section class="section">
                        <div class="container mud-paper mud-elevation-1">
                            <div class="d-flex flex-wrap justify-space-between">
                                <div class="pa-3">
                                    <MudLink Href="@Links.Subject.History.Topic(test.Topic.Id)" Typo="Typo.h5">
                                        @test.Topic.Title
                                    </MudLink>
                                    <MudText Typo="Typo.body1">
                                        @L["Test:Hard"]
                                    </MudText>
                                </div>
                                <div class="pa-3">
                                    <ConclusionStatusTitle Status="@test.Status"/>
                                    <MudText Typo="Typo.body1" Align="Align.Right">
                                        @test.CompletedAt.ToSimpleFormat()
                                    </MudText>
                                </div>
                            </div>
                        </div>
                    </section>

                    <section class="section">
                        <div class="container">
                            <div class="mb-3">
                                <MudLink Href="@Links.Profile.History.HardTestStatistics" Typo="Typo.h5">
                                    @L["Statistics"]
                                </MudLink>
                            </div>
                            <ConclusionCharts Conclusion="@test"/>
                        </div>
                    </section>

                    <section class="section">
                        <div class="container">
                            <MudText Typo="Typo.h5" Class="mb-3">
                                @L["Answers"]
                            </MudText>
                            <HardQuestionTable Questions="@test.Questions"/>
                        </div>
                    </section>
                    break;

                case MixedTestConclusion test:
                    <Title Value="@L["Test:Mixed"]"></Title>

                    <section class="section">
                        <div class="container mud-paper mud-elevation-1">
                            <div class="d-flex flex-wrap align-center justify-space-between">
                                <div class="pa-3">
                                    <MudText Typo="Typo.h5">
                                        @L["Test:Mixed"]
                                    </MudText>
                                </div>
                                <div class="pa-3">
                                    <ConclusionStatusTitle Status="@test.Status"/>
                                    <MudText Typo="Typo.body1" Align="Align.Right">
                                        @test.CompletedAt.ToSimpleFormat()
                                    </MudText>
                                </div>
                            </div>
                        </div>
                    </section>

                    <section class="section">
                        <div class="container">
                            <div class="mb-3">
                                <MudLink Href="@Links.Profile.History.HardTestStatistics" Typo="Typo.h5">
                                    @L["Statistics"]
                                </MudLink>
                            </div>
                            <ConclusionCharts Conclusion="@test"/>
                        </div>
                    </section>
                    
                    <section class="section">
                        <div class="container">
                            <MudText Typo="Typo.h5" Class="mb-3">
                                @L["Answers"]
                            </MudText>
                            <MixedQuestionTable Questions="@test.Questions"/>
                        </div>
                    </section>
                    
                    break;

                default:
                    throw new ArgumentOutOfRangeException(nameof(conclusion));
            }

        </Result>
    </ApiResponseViewer>
</MainContainer>

@code {

    [Inject]
    private IHistoryClient HistoryClient { get; set; } = default!;

    [Inject]
    private IStringLocalizer<App> L { get; set; } = default!;

    [Parameter]
    public string Id { get; set; } = string.Empty;

    private ApiResponse<TestConclusion> _response = ApiResponse<TestConclusion>.Loading();

    protected override async Task OnParametersSetAsync() =>
        _response = await HistoryClient.Test.GetConclusionAsync(Id);

}
