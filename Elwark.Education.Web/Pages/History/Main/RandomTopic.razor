@using Elwark.Education.Web.Gateways.History
@inject IStringLocalizer<App> L
@inject IHistoryClient Client
@inject NavigationManager Navigation

<div Class="container @Class">
    <div class="image" style="background-image: url('@SubjectType.History.GetStatic().Image')">
        <div class="cover">
            <MudButton Variant="Variant.Filled" Color="Color.Primary" Size="Size.Large" OnClick="@OnClick">
                @if (_isLoading)
                {
                    <div class="d-flex flex-row align-center">
                        <MudProgressCircular Class="mr-3" Size="Size.Small" Indeterminate="true"/>
                        @(L["Search"] + "...")
                    </div>
                }
                else
                {
                    @L["Topics:Random"]
                }
            </MudButton>
        </div>
    </div>
</div>

@code {

    [Parameter]
    public string? Class { get; set; }

    private bool _isLoading;

    private async Task OnClick()
    {
        if (_isLoading)
            return;

        _isLoading = true;

        var result = await Client.Topic.GetRandomAsync();
        if (result.Status == ResponseStatus.Success)
            Navigation.NavigateTo(Links.History.Topics(result.Data.TopicId));

        _isLoading = false;
    }

}
