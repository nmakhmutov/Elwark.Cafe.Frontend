@* ReSharper disable once CheckNamespace *@
@namespace Elwark.Education.Web.Components

@using Elwark.Education.Web.Gateways.Models.History
@inject IStringLocalizer<App> L

@foreach (var article in Articles)
{
    <div class="grid">
        <div class="article-title">
            <div>
                @if (article.Permission.Type == ContentType.Premium)
                {
                    <MudText Typo="Typo.body2" Color="Color.Warning">
                        @article.Permission.Type
                    </MudText>
                }
                @if (article.Permission.IsAllowed)
                {
                    <MudLink Typo="Typo.h2" Href="@(Links.History.Article(article.Id))" Class="title">
                        @article.Title
                    </MudLink>
                }
                else
                {
                    <a href="#"
                       class="mud-typography mud-link mud-primary-text mud-link-underline-hover mud-typography-h2 title"
                       @onclick:preventDefault="true"
                       @onclick="@OnPremiumClick">
                        @article.Title
                    </a>
                }
            </div>

            <div class="caption d-flex flex-row align-center flex-wrap mt-3">
                <ContentRatingIcon Rating="@article.Rating"/>
                @if (article.CompletedTimes is not null)
                {
                    @if (article.CompletedTimes.Success > 0)
                    {
                        <div class="d-flex flex-row align-center">
                            <MudIcon Icon="@(Icons.Filled.PanoramaFishEye)" Class="mx-2" Style="width: 8px; height: 8px"/>
                            <MudText Typo="Typo.body2">
                                <em>
                                    @L["Test:PassedTimes", article.CompletedTimes.Success.ToReadable()]
                                </em>
                            </MudText>
                        </div>
                    }

                    @if (article.CompletedTimes.Fail > 0)
                    {
                        <div class="d-flex flex-row align-center">
                            <MudIcon Icon="@(Icons.Filled.PanoramaFishEye)" Class="mx-2" Style="width: 8px; height: 8px"/>
                            <MudText Typo="Typo.body2">
                                <em>
                                    @L["Test:NotPassedTimes", article.CompletedTimes.Fail.ToReadable()]
                                </em>
                            </MudText>
                        </div>
                    }
                }
            </div>
        </div>

        <div class="article-description @(article.Image is null ? "two-column" : null)">
            <MudText Typo="Typo.subtitle1">
                @article.Overview
            </MudText>
        </div>

        @if (article.Image is not null)
        {
            <div class="article-image">
                <img src="@article.Image" loading="lazy" alt="@article.Title"/>
            </div>
        }

    </div>
}

@code {

    [Parameter]
    public HistoryArticleSummary[] Articles { get; set; } = Array.Empty<HistoryArticleSummary>();

    [Parameter]
    public EventCallback OnPremiumClick { get; set; }

}
