@inherits LayoutComponentBase
@layout MainLayout
@inject NavigationManager NavigationManager
@inject IStringLocalizer<App> L

<div class="header">
    <div class="user-container" style="background: @_static.Gradient">
        <div class="user">
            <AuthorizeView>
                <Authorizing>
                    <MudSkeleton SkeletonType="SkeletonType.Circle"/>
                    <MudSkeleton SkeletonType="SkeletonType.Text" Class="avatar"/>
                </Authorizing>
                <Authorized>
                    <MudAvatar Image="@context.User.GetImage()" Size="Size.Large" Class="avatar"/>
                    <MudText Typo="Typo.h5">
                        @context.User.GetName()
                    </MudText>
                </Authorized>
            </AuthorizeView>
        </div>
    </div>
    <div class="navbar">
        <div class="subject">
            <MudIcon Icon="@_static.Icon" Size="Size.Medium" Color="Color.Inherit" Class="subject-icon"/>
            <MudLink Typo="Typo.h5" Href="@Links.Subjects.Index(_subject)">
                @L[$"Subject:{_subject}"]
            </MudLink>
        </div>
        <div class="menu">
            @foreach (var item in _menu)
            {
                @if (item.IsActive)
                {
                    <div class="menu-item menu-active">
                        <MudIcon Icon="@item.Icon" Class="item-icon"/>
                        <MudText Typo="Typo.subtitle1" Class="item-text">
                            @item.Title
                        </MudText>
                    </div>
                }
                else
                {
                    <a href="@item.Link" class="menu-item menu-link">
                        <MudIcon Icon="@item.Icon" Class="item-icon" Color="Color.Inherit"/>
                        <MudText Typo="Typo.subtitle1" Class="item-text" Color="Color.Inherit">
                            @item.Title
                        </MudText>
                    </a>
                }
            }
        </div>
    </div>
</div>

<MainContainer>
    @Body
</MainContainer>

@code {
    private SubjectType _subject;
    private Data[] _menu = Array.Empty<Data>();
    private SubjectStatic _static = new(string.Empty, String.Empty, string.Empty);

    protected override void OnParametersSet()
    {
        var parts = new Uri(NavigationManager.Uri).LocalPath.Trim('/').Split('/');
        _subject = Enum.Parse<SubjectType>(parts[1], true);
        _static = _subject.GetStatic();
        var page = parts.Length > 2 ? parts[2].ToLowerInvariant() : "overview";

        _menu = new Data[]
        {
    // new(L["Profile"], Links.Profile.Index, Icons.Filled.Person, false),
            new(L["Overview"], Links.Profile.Overview(_subject), Icons.Filled.CardMembership, page == "overview"),
            new(L["Statistics"], Links.Profile.Statistics(_subject), Icons.Filled.BarChart, page == "statistics"),
            new(L["Favorites"], Links.Profile.Favorites(_subject), Icons.Filled.Favorite, page == "favorites")
        };
    }

    private sealed record Data(LocalizedString Title, string Link, string Icon, bool IsActive);

}
