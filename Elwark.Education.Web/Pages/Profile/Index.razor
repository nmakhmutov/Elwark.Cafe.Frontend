@layout MainLayout
@page "/profile"
@using Elwark.Education.Web.Gateways.User
@inject IUserClient UserClient
@inject IDialogService Dialog
@inject IStringLocalizer<App> L
@attribute [Authorize]

<div class="ma-6">
    <ApiResponseViewer InitLoader="@(() => UserClient.GetProfileAsync())">
        <Loading>
            <CardsSkeleton/>
        </Loading>
        <Result Context="profile">
            <div class="subjects">
                <ProfileUserCard Statistics="@profile.Statistics.Summary"/>
                @if (profile.CurrentTests.Length > 0)
                {
                    <MudPaper Class="pa-3">
                        <MudText Typo="Typo.h5" Class="mb-3">
                            @L["CurrentTests"]
                        </MudText>
                        @foreach (var test in profile.CurrentTests)
                        {
                            <div class="mb-6">
                                <div class="d-flex flex-row align-center">
                                    <SubjectIcon SubjectType="@test.SubjectType" Size="Size.Medium"/>
                                    <div class="ml-3">
                                        <MudLink Typo="Typo.h6" Href="@Links.Subjects.Test(test.SubjectType, test.Id)">
                                            @test.Title
                                        </MudLink>
                                        <MudText Typo="Typo.body2">
                                            @L[$"Subject:{test.SubjectType}"]
                                        </MudText>
                                    </div>
                                </div>
                                <MudDivider DividerType="DividerType.FullWidth" Class="my-2"/>
                                <div class="d-flex flex-row align-center">
                                    <MudIcon Icon="@Filled.Timer" Size="Size.Small"/>
                                    <MudText Typo="Typo.body2" Class="ml-1">
                                        @L["Deadline"]
                                    </MudText>
                                    <MudText Typo="Typo.body2" Class="ml-3">
                                        @test.ExpiredAt.ToSimpleFormat()
                                    </MudText>
                                </div>
                            </div>
                        }
                    </MudPaper>
                }
                @foreach (var subscription in profile.Subjects.OrderBy(x => L[x.SubjectType.ToString()].Value))
                {
                    <ProfileSubscriptionCard
                        Subject="@subscription"
                        OnBuyClick="@OnBuyClick"
                        OnManageClick="@OnManageClick"/>
                }
            </div>
        </Result>
    </ApiResponseViewer>
</div>

@code {

    private void OnBuyClick(SubjectType subjectType)
    {
        var options = new DialogOptions
        {
            MaxWidth = MaxWidth.Large,
            NoHeader = true,
            CloseButton = false,
            FullWidth = true
        };
        var parameters = new DialogParameters
        {
            [nameof(SubscriptionModal.SubjectType)] = subjectType
        };

        Dialog.Show<SubscriptionModal>(null, parameters, options);
    }

    private void OnManageClick(SubjectType subjectType)
    {
        Console.WriteLine($@"On prolong click: {subjectType}");
    }

}