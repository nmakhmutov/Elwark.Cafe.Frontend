@page "/profile"
@using Elwark.Education.Web.Gateways.User
@using Elwark.Education.Web.Gateways.Models.User
@layout ProfileLayout
@inject IUserClient UserClient
@inject IDialogService Dialog
@inject IStringLocalizer<App> L
@attribute [Authorize]

@switch (Profile.Status)
{
    case ResponseStatus.Loading:
        <CardsSkeleton/>
        break;

    case ResponseStatus.Fail:
        <ErrorPage Error="@Profile.Error"/>
        break;

    case ResponseStatus.Success:
    {
        @if (Profile.Data.CurrentTests.Length > 0)
        {
            <MudText Typo="Typo.h5" Class="mb-2">
                @L["CurrentTests"]
            </MudText>
            <div class="current-tests mb-6">
                @foreach (var test in Profile.Data.CurrentTests)
                {
                    <ProfileCurrentTestCard Test="@test"/>
                }
            </div>
        }

        <div class="subject-container">
            <MudText Typo="Typo.h5" Class="mb-2">
                @L["Subjects"]
            </MudText>
            <div class="subject-grid mb-6">
                @foreach (var subscription in Profile.Data.Subjects.OrderBy(x => L[x.SubjectType.ToString()].Value))
                {
                    <ProfileSubscriptionCard
                        Subject="@subscription"
                        OnBuyClick="@OnBuyClick"
                        OnManageClick="@OnManageClick"/>
                }
            </div>
        </div>
    }
        break;
}

@code {

    [CascadingParameter]
    public ApiResponse<Profile> Profile { get; set; } = ApiResponse<Profile>.Loading();

    private void OnBuyClick(SubjectType subjectType)
    {
        var options = new DialogOptions
        {
            MaxWidth = MaxWidth.Large,
            NoHeader = true,
            CloseButton = false,
            FullWidth = true
        };
        var parameters = new DialogParameters
        {
            [nameof(SubscriptionModal.SubjectType)] = subjectType
        };

        Dialog.Show<SubscriptionModal>(null, parameters, options);
    }

    private void OnManageClick(SubjectType subjectType)
    {
        Console.WriteLine($@"On prolong click: {subjectType}");
    }

}