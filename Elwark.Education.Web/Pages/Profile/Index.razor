@page "/profile"
@layout ProfileLayout
@using Elwark.Education.Web.Services.User
@using Elwark.Education.Web.Services.User.Model
@inject IUserService UserService
@inject IStringLocalizer<ProfileLayout> L
@attribute [Authorize]

@if (_profile is null)
{
    <PageLoader/>}
else
{
    if (_profile.CurrentTests.Length > 0)
    {
        <MudText Typo="Typo.h4" Class="mb-3">
            @L["CurrentTests"]
        </MudText>
        <div class="current-tests">
            @foreach (var test in _profile.CurrentTests)
            {
                var link = test.Subject switch {
                    Subject.History => Links.History.Test(test.Id),
                    Subject.Physics => "#",
                    Subject.Astronomy => "#",
                    _ => "#"
                    };
                <MudPaper Elevation="1" Class="pa-6">
                    <MudLink Typo="Typo.h6" Href="@link">
                        @test.Title
                    </MudLink>
                    <MudText Typo="Typo.body2">
                        @L["ExpireAt"] @(test.ExpiredAt.Date == DateTime.Now.Date
                                           ? test.ExpiredAt.ToLongTimeString()
                                           : test.ExpiredAt)
                    </MudText>
                </MudPaper>            }
        </div>
    }
}

@code {

    [CascadingParameter]
    public TotalProgress? TotalProgress { get; set; }

    private Profile? _profile;

    protected override async Task OnInitializedAsync()
    {
        _profile = await UserService.GetProfileAsync();
    }

}