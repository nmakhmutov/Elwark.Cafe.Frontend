@* ReSharper disable once CheckNamespace *@
@namespace Elwark.Education.Web.Components

@typeparam TItem
@inject IStringLocalizer<App> L

@switch (State)
{
    case Ordering.Less:
        <div>
            <MudText Typo="Typo.body1">
                <strong>
                    @ValueConverter(Current)
                </strong>
                <MudText Typo="Typo.body1" Inline="true" Class="d-inline-flex pl-1" Color="Color.Error">
                    @ValueConverter(Difference)
                    <MudIcon Icon="@Icons.Filled.KeyboardArrowDown" Color="Color.Error"/>
                </MudText>
            </MudText>
            <MudText Typo="Typo.body2">
                @L["CurrentWeek"]
            </MudText>
        </div>
        break;

    case Ordering.Equal:
        if (Current.Equals(Zero))
        {
            <MudText Typo="Typo.body2">
                @L["NoProgressYet"]
            </MudText>
        }
        else
        {
            <div>
                <MudText Typo="Typo.body1" Class="d-inline-flex">
                    <strong>
                        @ValueConverter(Current)
                    </strong>
                    <MudText Typo="Typo.body1" Class="d-inline-flex pl-2" Color="Color.Primary">
                        @ValueConverter(Difference)
                        <MudIcon Icon="@Icons.Filled.CompareArrows" Color="Color.Primary" Class="pl-1"/>
                    </MudText>
                </MudText>
                <MudText Typo="Typo.body2">
                    @L["CurrentWeek"]
                </MudText>
            </div>
        }
        break;

    case Ordering.Greater:
        <div>
            <MudText Typo="Typo.body1">
                <strong>
                    @ValueConverter(Current)
                </strong>
                <MudText Typo="Typo.body1" Class="d-inline-flex pl-1" Color="Color.Success">
                    +@ValueConverter(Difference)
                    <MudIcon Icon="@Icons.Filled.KeyboardArrowUp" Color="Color.Success"/>
                </MudText>
            </MudText>
            <MudText Typo="Typo.body2">
                @L["CurrentWeek"]
            </MudText>
        </div>
        break;
}

@code {

    private Ordering State => (Ordering) Comparer<TItem>.Default.Compare(Difference, Zero);

    [Parameter]
    public TItem Current { get; set; } = default!;

    [Parameter]
    public TItem Difference { get; set; } = default!;

    [Parameter]
    public TItem Zero { get; set; } = default!;

    [Parameter]
    public Func<TItem, string> ValueConverter { get; set; } = x => x?.ToString() ?? string.Empty;

}