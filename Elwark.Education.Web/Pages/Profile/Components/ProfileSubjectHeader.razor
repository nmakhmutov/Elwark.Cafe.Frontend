@using Elwark.Education.Web.Pages.Profile.Components
@* ReSharper disable once CheckNamespace *@
@namespace Elwark.Education.Web.Components
@inject IStringLocalizer<App> L

<div class="background">
    <div class="cover">
        <div class="container">
            <div class="header">
                <a href="@Links.Subjects.Index(SubjectType)" class="title">
                    @L[$"Subject:{SubjectType}"]
                </a>
            </div>
            <div class="menu">
                @foreach (var item in _items)
                {
                    @if (item.IsActive)
                    {
                        <div class="menu-item item-active">
                            <MudIcon Icon="@item.Icon" Class="item-icon"/>
                            <MudText Typo="Typo.subtitle1" Class="item-text">
                                @item.Title
                            </MudText>
                        </div>
                    }
                    else
                    {
                        <a href="@item.Link" class="menu-item item-link">
                            <MudIcon Icon="@item.Icon" Class="item-icon"/>
                            <MudText Typo="Typo.subtitle1" Class="item-text">
                                @item.Title
                            </MudText>
                        </a>
                    }
                }
            </div>
        </div>
    </div>
</div>

@code {

    private IEnumerable<Data> _items = Array.Empty<Data>();

    [Parameter]
    public SubjectType SubjectType { get; set; }

    [Parameter]
    public ProfileSubMenu Selected { get; set; } = ProfileSubMenu.None;

    protected override void OnInitialized() =>
        _items = new Data[]
        {
            new(L["Profile"].Value, Links.Profile.Index, Filled.DonutLarge, false),
            new(L["Overview"].Value, Links.Profile.Overview(SubjectType), Filled.CardMembership, Selected == ProfileSubMenu.Overview),
            new(L["Statistics"].Value, Links.Profile.Statistics(SubjectType), Filled.BarChart, Selected == ProfileSubMenu.Statistics),
            new(L["Tests"].Value, Links.Profile.Tests(SubjectType), Filled.Class, Selected == ProfileSubMenu.Tests)
        };

    private class Data
    {
        public Data(string title, string link, string icon, bool isActive)
        {
            Title = title;
            Link = link;
            Icon = icon;
            IsActive = isActive;
        }

        public string Title { get; }

        public string Link { get; }

        public string Icon { get; }

        public bool IsActive { get; }
    }

}