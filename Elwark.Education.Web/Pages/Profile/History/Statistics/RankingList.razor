@using Elwark.Education.Web.Gateways.Models.Statistics
@typeparam TItem
@inject IStringLocalizer<App> L

<div class="@Class">
    @for (var i = 0; i < Items.Length; i++)
    {
        var item = Items[i];
        var position = GetPosition(i);

        <div class="item">
            <div class="header">
                <div class="header-content">
                    @if (item.Title is null)
                    {
                        <MudText Typo="Typo.subtitle1">
                            @L["Deleted"]
                        </MudText>
                    }
                    else
                    {
                        <MudLink Class="title" Typo="Typo.subtitle1" Href="@LinkBuilder(item.Id)">
                            @item.Title
                        </MudLink>
                    }
                </div>
                <div class="header-action">
                    <MudText Typo="Typo.body2">
                        @item.CreatedAt.ToSimpleFormat()
                    </MudText>
                </div>
            </div>
            <div class="content">
                <MudText Typo="Typo.h5">
                    @ValueConverter(item.Value)
                </MudText>
                <MudAvatar Size="Size.Small" Square="false" Class="mr-2" Style="@("background-color: " + GetPositionColor(position))">
                    @position
                </MudAvatar>
            </div>
        </div>
    }
</div>

@code {

    [Parameter]
    public string? Class { get; set; }

    [Parameter]
    public RankingItem<TItem>[] Items { get; set; } = Array.Empty<RankingItem<TItem>>();

    [Parameter]
    public Func<TItem, string> ValueConverter { get; set; } = item => item?.ToString() ?? string.Empty;

    [Parameter]
    public Func<string, string> LinkBuilder { get; set; } = _ => string.Empty;

    private int GetPosition(int i) =>
        i + 1;

    private string GetPositionColor(int position) =>
        position switch { 
            1 => Colors.Amber.Accent2, 
            2 => Colors.BlueGrey.Lighten2, 
            3 => Colors.Orange.Darken3, 
            _ => Colors.Grey.Lighten1 
            };

}
