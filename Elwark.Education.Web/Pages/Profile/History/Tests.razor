@page "/profile/history/tests"
@using Elwark.Education.Web.Gateways.History
@using Elwark.Education.Web.Gateways.Models.TestConclusion
@layout ProfileLayout

@inject IHistoryClient HistoryClient
@inject IStringLocalizer<App> L

@attribute [Authorize]

@switch (_tests.Status)
{
    case ResponseStatus.Loading:
        <PageLoader/>
        break;

    case ResponseStatus.Fail:
        <ErrorPage Error="_tests.Error"/>
        break;

    case ResponseStatus.Success:
        <SubjectHeader Subject="@Subject.History"/>
        @foreach (var item in _tests.Data.Items)
        {
            <h1>@item.Title</h1>
            @(item switch{
                ArticleTestConclusion x => Links.History.Article(x.ArticleId),
                TopicTestConclusion x => Links.History.Topic(x.TopicId),
                _ => throw new ArgumentOutOfRangeException(nameof(item))
                })
        }
        break;
}

@code
{
    ApiResponse<PageableResponse<TestConclusion>> _tests = ApiResponse<PageableResponse<TestConclusion>>.Loading();

    protected override async Task OnInitializedAsync()
    {
        _tests = await HistoryClient.GetMyTestConclusionsAsync(new PageableRequest(null, 20));
    }
}