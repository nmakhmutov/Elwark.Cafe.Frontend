@using Elwark.Education.Web.Gateways.Models.Statistics
@inject IStringLocalizer<App> L

<div class="statistics-grid @Class">
    <div class="icon-widget-grid">
        <IconWidget
            Icon="@Filled.Timer"
            Title="@L["TimeSpent"]"
            Value="@Statistics.TimeSpent.ToSimpleFormat()">
            <Caption>
                <DifferenceCaption
                    Current="@Statistics.WeeklyDifference.TimeSpent.Current"
                    Difference="@Statistics.WeeklyDifference.TimeSpent.Difference"
                    ValueConverter="@(span => span.ToSimpleFormat())"/>
            </Caption>
        </IconWidget>
    </div>

    <DetailWidget Icon="@Filled.School" Value="@Statistics.CompletedTests.Total.ToReadable()" Title="@L["CompletedTests"]">
        <Caption>
            <DifferenceCaption
                Current="@Statistics.WeeklyDifference.CompletedTests.Current"
                Difference="@Statistics.WeeklyDifference.CompletedTests.Difference"
                ValueConverter="@(arg => arg.ToReadable())"/>
        </Caption>
        <Details>
            <div class="detail-grid">
                <div>
                    <MudText Typo="Typo.h6" Align="Align.Center">
                        @Statistics.CompletedTests.Completed.ToReadable()
                    </MudText>
                    <MudText Typo="Typo.body1" Align="Align.Center">
                        @L["CompletedTests:Completed"]
                    </MudText>
                </div>
                <div>
                    <MudText Typo="Typo.h6" Align="Align.Center">
                        @Statistics.CompletedTests.TimeExceeded.ToReadable()
                    </MudText>
                    <MudText Typo="Typo.body1" Align="Align.Center">
                        @L["CompletedTests:TimeExceeded"]
                    </MudText>
                </div>
                <div>
                    <MudText Typo="Typo.h6" Align="Align.Center">
                        @Statistics.CompletedTests.RepliesExceeded.ToReadable()
                    </MudText>
                    <MudText Typo="Typo.body1" Align="Align.Center">
                        @L["CompletedTests:RepliesExceeded"]
                    </MudText>
                </div>
            </div>
        </Details>
    </DetailWidget>

    <DetailWidget Icon="@Filled.PendingActions" Value="@Statistics.Score.Total.ToReadable()" Title="@L["Score"]">
        <Caption>
            <DifferenceCaption
                Current="@Statistics.WeeklyDifference.Score.Current"
                Difference="@Statistics.WeeklyDifference.Score.Difference"
                ValueConverter="@(arg => arg.ToReadable())"/>
        </Caption>
        <Details>
            <div class="detail-grid">
                <div>
                    <MudText Typo="Typo.h6" Align="Align.Center">
                        @Statistics.Score.Questions.ToReadable()
                    </MudText>
                    <MudText Typo="Typo.body1" Align="Align.Center">
                        @L["Score:ByQuestions"]
                    </MudText>
                </div>
                <div>
                    <MudText Typo="Typo.h6" Align="Align.Center">
                        @Statistics.Score.NoMistakes.ToReadable()
                    </MudText>
                    <MudText Typo="Typo.body1" Align="Align.Center">
                        @L["Score:NoMistakesBonus"]
                    </MudText>
                </div>
                <div>
                    <MudText Typo="Typo.h6" Align="Align.Center">
                        @Statistics.Score.Speed.ToReadable()
                    </MudText>
                    <MudText Typo="Typo.body1" Align="Align.Center">
                        @L["Score:BySpeedBonus"]
                    </MudText>
                </div>
            </div>
        </Details>
    </DetailWidget>

    <DetailWidget Icon="@Filled.HelpOutline" Value="@Statistics.AnswerRatio.Questions.ToReadable()" Title="@L["Questions"]">
        <Caption>
            <DifferenceCaption
                Current="@Statistics.WeeklyDifference.Questions.Current"
                Difference="@Statistics.WeeklyDifference.Questions.Difference"
                ValueConverter="@(arg => arg.ToReadable())"/>
        </Caption>
        <Details>
            <div class="detail-grid">
                <div>
                    <MudText Typo="Typo.h6" Align="Align.Center">
                        @Statistics.AnswerRatio.Correct.ToReadable()
                    </MudText>
                    <MudText Typo="Typo.body1" Align="Align.Center">
                        @L["Questions:Correct"]
                    </MudText>
                </div>
                <div>
                    <MudText Typo="Typo.h6" Align="Align.Center">
                        @Statistics.AnswerRatio.Incorrect.ToReadable()
                    </MudText>
                    <MudText Typo="Typo.body1" Align="Align.Center">
                        @L["Questions:Incorrect"]
                    </MudText>
                </div>
                <div>
                    <MudText Typo="Typo.h6" Align="Align.Center">
                        @Statistics.AnswerRatio.Answered.ToReadable()
                    </MudText>
                    <MudText Typo="Typo.body1" Align="Align.Center">
                        @L["Questions:Answered"]
                    </MudText>
                </div>
                <div>
                    <MudText Typo="Typo.h6" Align="Align.Center">
                        @Statistics.AnswerRatio.NotAnswered.ToReadable()
                    </MudText>
                    <MudText Typo="Typo.body1" Align="Align.Center">
                        @L["Questions:NotAnswered"]
                    </MudText>
                </div>
            </div>
        </Details>
    </DetailWidget>

    <RankingWidget
        Title="@L["Ranking:ByScore"]"
        Items="@Statistics.ScoreRanking"
        LinkBuilder="@((string id) => LinkBuilder(id))"
        ValueConverter="@(arg => arg.ToReadable())"/>

    <RankingWidget
        Title="@L["Ranking:ByTimeSpent"]"
        Items="@Statistics.TimeSpentRanking"
        LinkBuilder="@((string id) => LinkBuilder(id))"
        ValueConverter="@((TimeSpan item) => item.ToSimpleFormat())"/>

    <RankingWidget
        Title="@L["Ranking:ByCompletedTimesRanking"]"
        Items="@Statistics.CompletedTimesRanking"
        LinkBuilder="@((string id) => LinkBuilder(id))"
        ValueConverter="@(arg => arg.ToReadable())"/>
</div>

@code {

    [Parameter]
    public ArticleStatistics Statistics { get; set; } = default!;

    [Parameter]
    public string? Class { get; set; }

    [Parameter]
    public Func<string, string> LinkBuilder { get; set; } = _ => string.Empty;

}