@inject IDialogService Dialog

<ul class="list @Class">
    @foreach (var item in Contents)
    {
        <li>
            <a href="@(item.Permission.IsAllowed ? Links.History.Article(item.Id) : "#")"
               @onclick:preventDefault="@(!item.Permission.IsAllowed)"
               @onclick="@OnPremiumClick"
               class="item @(item.Id == SelectedArticleId ? "active" : null)">
                <div class="item-avatar">
                    <div class="avatar-group">
                        @if (item.Image is not null)
                        {
                            <div class="avatar">
                                <img alt="@item.Title" src="@item.Image" class="img">
                            </div>
                        }
                    </div>
                </div>
                <div class="multiline">
                    <MudText Typo="Typo.subtitle2">
                        @item.Title
                    </MudText>
                    @if (item.Permission.Type == ContentType.Premium)
                    {
                        <MudText Typo="Typo.caption" Color="Color.Warning">
                            @item.Permission.Type
                        </MudText>
                    }
                    else
                    {
                        <MudText Typo="Typo.caption">
                            @item.Overview.Substring(0, 27)...
                        </MudText>
                    }
                </div>
            </a>
        </li>
    }
</ul>

@code {

    [Parameter]
    public ArticleOverview[] Contents { get; set; } = Array.Empty<ArticleOverview>();

    [Parameter]
    public string? Class { get; set; }

    [Parameter]
    public string SelectedArticleId { get; set; } = string.Empty;

    private void OnPremiumClick()
    {
        var options = new DialogOptions
        {
            MaxWidth = MaxWidth.Large,
            NoHeader = true,
            CloseButton = false,
            FullWidth = true
        };
        var parameters = new DialogParameters
        {
            [nameof(SubscriptionModal.SubjectType)] = SubjectType.History
        };

        Dialog.Show<SubscriptionModal>(null, parameters, options);
    }

}
