@inject IStringLocalizer<App> L
@inject ErrorManager ErrorManager
@inject IDialogService Dialog

@switch (Status)
{
    case TestStatus.Allowed when IsLoading:
        <div class="@Class">
            <MudButton Variant="Variant.Filled" Disabled="true">
                <div class="d-flex flex-row align-center">
                    <MudProgressCircular Class="mr-3" Size="Size.Small" Indeterminate="true"/>
                    @L["Loading"]
                </div>
            </MudButton>
        </div>
        break;

    case TestStatus.Allowed:
        <div class="@Class">
            <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="@OnCreateTestClick">
                @L["Test:PassATest"]
            </MudButton>
        </div>
        break;

    case TestStatus.CreatedMaximumTests:
    case TestStatus.ReachedMaximumAnswerAttempts:
        <div class="grid">
            <div>
                <MudButton Variant="Variant.Filled" Color="Color.Primary" Disabled="true">
                    @L["Test:PassATest"]
                </MudButton>
            </div>
            <div>
                <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="@OnBuyClick">
                    @L["Subscription:PricingPlan"]
                </MudButton>
            </div>
            <div class="tariff">
                <MudText Typo="Typo.body2" Color="Color.Tertiary" Class="mt-2">
                    @ErrorManager.Localize(Status)
                </MudText>
            </div>
        </div>
        break;

    default:
        <div class="@Class">
            <MudText Typo="Typo.body2" Color="Color.Error">
                @ErrorManager.Localize(Status)
            </MudText>
        </div>
        break;
}

@code {

    [Parameter]
    public string? Class { get; set; }

    [Parameter]
    public TestStatus Status { get; set; }

    [Parameter]
    public bool IsLoading { get; set; }

    [Parameter]
    public SubjectType Subject { get; set; }

    [Parameter]
    public EventCallback OnCreateTestClick { get; set; }

    private void OnBuyClick()
    {
        var options = new DialogOptions
        {
            MaxWidth = MaxWidth.Large,
            NoHeader = true,
            CloseButton = false,
            FullWidth = true
        };
        var parameters = new DialogParameters
        {
            [nameof(SubscriptionModal.SubjectType)] = Subject
        };

        Dialog.Show<SubscriptionModal>(null, parameters, options);
    }

}
