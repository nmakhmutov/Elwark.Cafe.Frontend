@inject IStringLocalizer<App> L

<div class="grid @Class">
    <div>
        @if (Adjacent.Past is not null)
        {
            <div class="d-flex flex-row mb-3">
                @if (Adjacent.Past.Permission.IsAllowed)
                {
                    <a href="@Links.History.Article(Adjacent.Past.Id)" class="d-flex flex-row align-center link">
                        <div>
                            <MudIcon Icon="@Icons.Filled.ChevronLeft" Class="icon"></MudIcon>
                        </div>
                        <div class="ml-3">
                            <MudText Typo="Typo.body2" Color="Color.Primary">
                                @L["Article:Past"]
                            </MudText>
                            <MudText Typo="Typo.h5" Class="title">
                                @Adjacent.Past.Title
                            </MudText>
                        </div>
                    </a>
                }
                else
                {
                    <a @onclick:preventDefault="true" @onclick="@OnPremiumClick" class="d-flex flex-row align-center link">
                        <div>
                            <MudIcon Icon="@Icons.Filled.ChevronLeft" Class="icon"></MudIcon>
                        </div>
                        <div class="ml-3">
                            <MudText Typo="Typo.body2" Color="Color.Primary">
                                @L["Article:Past"]
                            </MudText>
                            <MudText Typo="Typo.h5" Class="title">
                                @Adjacent.Past.Title
                            </MudText>
                        </div>
                    </a>
                }
            </div>
            <MudText Typo="Typo.body2">
                @Adjacent.Past.Overview
            </MudText>
        }
    </div>
    <div>
        @if (Adjacent.Next is not null)
        {
            <div class="d-flex flex-row justify-end mb-3">
                @if (Adjacent.Next.Permission.IsAllowed)
                {
                    <a href="@Links.History.Article(Adjacent.Next.Id)" class="d-flex flex-row align-center link">
                        <div class="mr-3">
                            <MudText Typo="Typo.body2" Color="Color.Primary" Align="Align.Right">
                                @L["Article:Next"]
                            </MudText>
                            <MudText Typo="Typo.h5" Class="title">
                                @Adjacent.Next.Title
                            </MudText>
                        </div>
                        <div>
                            <MudIcon Icon="@Icons.Filled.ChevronRight" Class="icon"></MudIcon>
                        </div>
                    </a>
                }
                else
                {
                    <a @onclick:preventDefault="true" @onclick="@OnPremiumClick" class="d-flex flex-row align-center link">
                        <div class="mr-3">
                            <MudText Typo="Typo.body2" Color="Color.Primary" Align="Align.Right">
                                @L["Article:Next"]
                            </MudText>
                            <MudText Typo="Typo.h5" Class="title">
                                @Adjacent.Next.Title
                            </MudText>
                        </div>
                        <div>
                            <MudIcon Icon="@Icons.Filled.ChevronRight" Class="icon"></MudIcon>
                        </div>
                    </a>
                }
            </div>
            @if (Adjacent.Next.Permission.Type == ContentType.Premium)
            {
                <MudText Typo="Typo.body2" Color="Color.Warning">
                    @Adjacent.Next.Permission.Type
                </MudText>
            }
            <MudText Typo="Typo.body2">
                @Adjacent.Next.Overview
            </MudText>
        }
    </div>
</div>

@code {

    [Parameter]
    public Elwark.Education.Web.Gateways.Models.AdjacentArticles Adjacent { get; set; } = default!;

    [Parameter]
    public string? Class { get; set; }

    [Parameter]
    public EventCallback OnPremiumClick { get; set; }

}