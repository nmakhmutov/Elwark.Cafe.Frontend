@using Elwark.Education.Web.Gateways.Models
@inject IStringLocalizer<App> Al

<MudCard>
    <MudCardMedia Image="@Image" Height="200"/>
    <MudCardContent>
        <MudLink Typo="Typo.subtitle1" Href="@Href">
            @Title
        </MudLink>
        @if (Subtitle is not null)
        {
            <MudText Typo="Typo.body2">
                @Subtitle
            </MudText>        }
    </MudCardContent>
    @if (Progress is not null)
    {
        <MudCardActions>
            @if (Progress.ExamPassedAt.HasValue)
            {
                <div class="d-flex flex-row align-center" style="color: @Progress.Color">
                    <MudIcon Icon="@Outlined.CheckCircleOutlineOutlined"/>
                    <MudText Typo="Typo.body1" Class="ml-1">
                        @Al["ExamPassed"]
                    </MudText>
                </div>
            }
            else
            {
                <div class="d-flex flex-row align-center">
                    <MudIcon Icon="@Outlined.RemoveCircleOutlineOutlined"/>
                    <MudText Typo="Typo.body2" Class="ml-2">
                        @Al["ExamNotPassed"]
                    </MudText>
                </div>
            }
        </MudCardActions>
        <div class="progress" data-label="@(Progress.PassedArticles + " / " + Progress.TotalArticles)">
            <span class="value" style="
            width:@(Progress.Percentage + "%"); 
            background-color: @Progress.Color; 
            border-bottom-right-radius: @(Progress.Percentage > 99.9 ? "var(--mud-default-borderradius)" : "0") "></span>
        </div>
    }
</MudCard>

@code {

    [Parameter]
    public string Image { get; set; } = string.Empty;

    [Parameter]
    public string Href { get; set; } = string.Empty;

    [Parameter]
    public string Title { get; set; } = string.Empty;

    [Parameter]
    public string? Subtitle { get; set; }

    [Parameter]
    public TopicProgress? Progress { get; set; }

}