@inject IStringLocalizer<App> L

<MudCard Class="@Class">
    <MudCardContent>
        <MudText Typo="Typo.h6" Class="mb-3">
            @L["Test:LastTests"]
        </MudText>
        @foreach (var conclusion in Conclusions)
        {
            <ul class="mb-6">
                <li class="mb-1">
                    <ConclusionStatusChip Status="@conclusion.Status"/>
                </li>
                <li class="d-flex flex-row justify-space-between underline mb-1">
                    <MudText Typo="Typo.subtitle1">
                        @L["Date"]
                    </MudText>
                    <MudText Typo="Typo.subtitle1">
                        @conclusion.CompletedAt.ToSimpleFormat()
                    </MudText>
                </li>
                <li class="d-flex flex-row justify-space-between underline mb-1">
                    <MudText Typo="Typo.subtitle1">
                        @L["Score"]
                    </MudText>
                    <MudText Typo="Typo.subtitle1">
                        @conclusion.TotalScore.ToReadable()
                    </MudText>
                </li>
                <li class="d-flex flex-row justify-space-between underline mb-1">
                    <MudText Typo="Typo.subtitle1">
                        @L["TimeSpent"]
                    </MudText>
                    <MudText Typo="Typo.subtitle1">
                        @conclusion.TimeSpent.ToSimpleFormat()
                    </MudText>
                </li>
                <li class="d-flex flex-row justify-end mb-1">
                    <MudLink Href="@DetailLinkBuilder(conclusion.TestId)">
                        @L["Detail"]
                    </MudLink>
                </li>
            </ul>
        }
        <div class="d-flex flex-row justify-end">
            <MudLink Color="Color.Primary" Href="@SeeAllLink">
                @L["SeeAll"]
            </MudLink>
        </div>
    </MudCardContent>
</MudCard>

@code {

    [Parameter]
    public ProgressTestConclusion[] Conclusions { get; set; } = Array.Empty<ProgressTestConclusion>();

    [Parameter]
    public string SeeAllLink { get; set; } = string.Empty;

    [Parameter]
    public Func<string, string> DetailLinkBuilder { get; set; } = _ => string.Empty;

    [Parameter]
    public string? Class { get; set; }

}